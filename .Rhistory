mutate(Date = as.Date(Date, "%Y-%m-%d")) %>%
filter(num_gpus_released == is.na) %>%
arrange(Date)
gpus <- read.csv("~/Desktop/Info201/AC-5GroupProject/data/gpu-cpu-history-kaggle/All_GPUs.csv")
btc <- read.csv("~/Desktop/Info201/AC-5GroupProject/data/BTC-USD-5Y.csv", na.strings = c("null"))
convert_date <- function(date) {
split <- str_split(date, "-")
num <- switch(split[[1]][[2]],
"Jan" = "01",
"Feb" = "02",
"Mar" = "03",
"Apr" = "04",
"May" = "05",
"Jun" = "06",
"Jul" = "07",
"Aug" = "08",
"Sep" = "09",
"Oct"= "10",
"Nov"= "11",
"Dec"= "12")
return(paste(str_trim(split[[1]][[3]]), num, str_trim(split[[1]][[1]]), sep = "-"))
}
gpus_f <- gpus %>%
filter(!str_detect(Release_Date, "Unknown Release Date")) %>%
rowwise() %>%
mutate(Date = convert_date(Release_Date)) %>%
group_by(Date) %>%
count() %>%
rename(num_gpus_released = n)
btc <- btc %>%
group_by(Date) %>%
select(Date, Close)
joined <- left_join(btc, gpus_f, by = "Date")
joined <- joined %>%
mutate(Date = as.Date(Date, "%Y-%m-%d")) %>%
filter(num_gpus_released != is.na) %>%
arrange(Date)
?filter
joined <- joined %>%
mutate(Date = as.Date(Date, "%Y-%m-%d")) %>%
arrange(Date)
convert_date <- function(date) {
split <- str_split(date, "-")
num <- switch(split[[1]][[2]],
"Jan" = "01",
"Feb" = "02",
"Mar" = "03",
"Apr" = "04",
"May" = "05",
"Jun" = "06",
"Jul" = "07",
"Aug" = "08",
"Sep" = "09",
"Oct"= "10",
"Nov"= "11",
"Dec"= "12")
return(paste(str_trim(split[[1]][[3]]), num, str_trim(split[[1]][[1]]), sep = "-"))
}
gpus_f <- gpus %>%
filter(!str_detect(Release_Date, "Unknown Release Date")) %>%
rowwise() %>%
mutate(Date = convert_date(Release_Date)) %>%
group_by(Date) %>%
count() %>%
rename(num_gpus_released = n)
btc <- btc %>%
group_by(Date) %>%
select(Date, Close)
joined <- left_join(btc, gpus_f, by = "Date")
joined <- joined %>%
mutate(Date = as.Date(Date, "%Y-%m-%d")) %>%
arrange(Date)
joined %>% filter(num_gpus_released != is.na)
joined %>% filter(num_gpus_released != is.na, .preserve = TRUE)
joined %>% filter(num_gpus_released != is.na, .preserve = TRUE)
joined %>% filter(num_gpus_released != is.na, .preserve = FALSE)
joined %>% filter(num_gpus_released != is.na)
rlang::last_error()
joined %>% filter(num_gpus_released != is.na, na.rm = T)
filter(joined, num_gpus_released != is.na, na.rm = T)
filter(joined, !(num_gpus_released == is.na), na.rm = T)
filter(joined, num_gpus_released == is.na, na.rm = T)
filter(joined$num_gpus_released == is.na, na.rm = T)
# summary info
library(tidyverse)
# Data Set 1:
BTC_USD <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/BTC-USD-YAHOO.csv",
stringsAsFactors = F, na.strings = "null")
BTC_USD <- BTC_USD %>% rename(Price = High)
# Data Set 2:
GPUs <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/gpu-cpu-history-kaggle/All_GPUs.csv",
stringsAsFactors = F)
GPUs$Release_Price <- as.numeric(gsub("\\$", "", GPUs$Release_Price))
GPUs$Release_Date <- gsub("\\\n", "", GPUs$Release_Date)
GPUs$Release_Date <- as.Date(GPUs$Release_Date, format = "%d-%b-%Y")
# Data Set 3:
bitcoin_price <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/kaggle_crypto_data/bitcoin_price.csv",
stringsAsFactors = F)
bitcoin_price <- bitcoin_price %>% rename(Price = High)
bitcoin_price$Date <- as.Date(bitcoin_price$Date, format = "%b %d, %Y")
# Data Set 4:
ethereum_price <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/kaggle_crypto_data/ethereum_price.csv",
stringsAsFactors = F)
ethereum_price <- ethereum_price %>% rename(Price = High)
ethereum_price$Date <- as.Date(ethereum_price$Date, format = "%b %d, %Y")
# Data Set 5:
dash_price <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/kaggle_crypto_data/dash_price.csv",
stringsAsFactors = F)
dash_price <- dash_price %>% rename(Price = High)
dash_price$Date <- as.Date(dash_price$Date, format = "%b %d, %Y")
# Data Set 6:
iota_price <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/kaggle_crypto_data/iota_price.csv",
stringsAsFactors = F)
iota_price <- iota_price %>% rename(Price = High)
iota_price$Date <- as.Date(iota_price$Date, format = "%b %d, %Y")
# Function to get summary information for each data set (excluding GPUs)
get_summary_info <- function(data) {
summary_info <- list()
summary_info$features <- colnames(data)
summary_info$n_cols <- ncol(data)
summary_info$n_obs <- nrow(data)
summary_info$max_price <- data %>%
filter(Price == max(Price, na.rm = T)) %>%
select(Price)
summary_info$date_max_price <- data %>%
filter(Price == max(Price, na.rm = T)) %>%
select(Date)
summary_info$start_price <- data %>%
filter(Date == min(Date, na.rm = T)) %>%
select(Price)
summary_info$date_start_price <- data %>%
filter(Date == min(Date, na.rm = T)) %>%
select(Date)
return(summary_info)
}
# Summary info for each data set
BTC_summary <- get_summary_info(BTC_USD)
bitcoin_summary <- get_summary_info(bitcoin_price)
ethereum_summary <- get_summary_info(ethereum_price)
dash_summary <- get_summary_info(dash_price)
iota_summary <- get_summary_info(iota_price)
GPU_summary <- list()
GPU_summary$max_release_price <- GPUs %>%
filter(Release_Price == max(Release_Price, na.rm = T)) %>%
select(Release_Price)
GPU_summary$max_price_release_date <- GPUs %>%
filter(Release_Price == max(Release_Price, na.rm = T)) %>%
select(Release_Date)
GPU_summary$model_max_price <- GPUs %>%
filter(Release_Price == max(Release_Price, na.rm = T)) %>%
select(Architecture)
?format
BTC_summary$date_start_price
format(BTC_summary$date_start_price, "%B %d, %Y")
?as.character
as.character(BTC_summary$date_start_price, "%B %d, %Y")
format(BTC_summary$date_start_price, format = "%B %d, %Y")
GPU_summary$n_cols <- ncol(GPUs)
GPU_summary$n_obs <- nrow(GPUs)
format(round(as.numeric(bitcoin_summary$max_price), 1), nsmall=1, big.mark=",")
format(round(as.numeric(bitcoin_summary$max_price), 2), nsmall=1, big.mark=",")
format(round(as.numeric(bitcoin_summary$start_price), 1), nsmall=1, big.mark=",")
format(round(as.numeric(ethereum_summary$max_price), 1), nsmall=1, big.mark=",")
# summary info
library(tidyverse)
# Data Set 1:
BTC_USD <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/BTC-USD-YAHOO.csv",
stringsAsFactors = F, na.strings = "null")
BTC_USD <- BTC_USD %>% rename(Price = High)
# Data Set 2:
GPUs <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/gpu-cpu-history-kaggle/All_GPUs.csv",
stringsAsFactors = F)
GPUs$Release_Price <- as.numeric(gsub("\\$", "", GPUs$Release_Price))
GPUs$Release_Date <- gsub("\\\n", "", GPUs$Release_Date)
GPUs$Release_Date <- as.Date(GPUs$Release_Date, format = "%d-%b-%Y")
# Data Set 3:
bitcoin_price <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/kaggle_crypto_data/bitcoin_price.csv",
stringsAsFactors = F)
bitcoin_price <- bitcoin_price %>% rename(Price = High)
bitcoin_price$Date <- as.Date(bitcoin_price$Date, format = "%b %d, %Y")
# Data Set 4:
ethereum_price <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/kaggle_crypto_data/ethereum_price.csv",
stringsAsFactors = F)
ethereum_price <- ethereum_price %>% rename(Price = High)
ethereum_price$Date <- as.Date(ethereum_price$Date, format = "%b %d, %Y")
# Data Set 5:
dash_price <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/kaggle_crypto_data/dash_price.csv",
stringsAsFactors = F)
dash_price <- dash_price %>% rename(Price = High)
dash_price$Date <- as.Date(dash_price$Date, format = "%b %d, %Y")
# Data Set 6:
iota_price <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/kaggle_crypto_data/iota_price.csv",
stringsAsFactors = F)
iota_price <- iota_price %>% rename(Price = High)
iota_price$Date <- as.Date(iota_price$Date, format = "%b %d, %Y")
# Function to get summary information for each data set (excluding GPUs)
get_summary_info <- function(data) {
summary_info <- list()
summary_info$features <- colnames(data)
summary_info$n_cols <- ncol(data)
summary_info$n_obs <- nrow(data)
summary_info$max_price <- data %>%
filter(Price == max(Price, na.rm = T)) %>%
select(Price)
summary_info$date_max_price <- data %>%
filter(Price == max(Price, na.rm = T)) %>%
select(Date)
summary_info$start_price <- data %>%
filter(Date == min(Date, na.rm = T)) %>%
select(Price)
summary_info$date_start_price <- data %>%
filter(Date == min(Date, na.rm = T)) %>%
select(Date)
return(summary_info)
}
# Summary info for each data set
BTC_summary <- get_summary_info(BTC_USD)
bitcoin_summary <- get_summary_info(bitcoin_price)
ethereum_summary <- get_summary_info(ethereum_price)
dash_summary <- get_summary_info(dash_price)
iota_summary <- get_summary_info(iota_price)
GPU_summary <- list()
GPU_summary$n_cols <- ncol(GPUs)
GPU_summary$n_obs <- nrow(GPUs)
GPU_summary$max_release_price <- GPUs %>%
filter(Release_Price == max(Release_Price, na.rm = T)) %>%
select(Release_Price)
GPU_summary$max_price_release_date <- GPUs %>%
filter(Release_Price == max(Release_Price, na.rm = T)) %>%
select(Release_Date)
GPU_summary$model_max_price <- GPUs %>%
filter(Release_Price == max(Release_Price, na.rm = T)) %>%
select(Architecture)
GPU_summary
format(round(as.numeric(GPU_summary$max_release_price), 1), nsmall=1, big.mark=",")
?format
?paste
paste("$", format(round(as.numeric(GPU_summary$max_release_price), 1), nsmall=1, big.mark=","))
paste("$", format(round(as.numeric(GPU_summary$max_release_price), 1), nsmall=1, big.mark=","), collapse = F)
paste("$", format(round(as.numeric(GPU_summary$max_release_price), 1), nsmall=1, big.mark=","), sep = "")
BTC_summary$date_start_price
as.Date(BTC_summary$date_start_price, format = "%B %d, %Y")
x <- BTC_summary$date_start_price
year(x)
format(x, "%B %d, %Y")
?format
format(x, "%B %d, %Y", trim = TRUE)
format(x, "%B %d, %Y", trim = FALSE)
format(as.Date(x), "%B %d, %Y")
BTC_summary$date_max_price
date_format <- new SimpleDateFormat("%Y-%d-%m")
?lubridate
parse_datetime(x, "%B %d, %Y")
parse_datetime(as.character(x), "%B %d, %Y")
library(chron)
install.packages(chron)
library(chron)
library("chron")
?chron
??chron
chron(x, out.format = "%B %d, %Y")
R.version.session
R.version.string
library(tidyverse)
# Data Set 1:
BTC_USD <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/BTC-USD-YAHOO.csv",
stringsAsFactors = F, na.strings = "null")
library(tidyverse)
# Data Set 1:
BTC_USD <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/BTC-USD-YAHOO.csv",
stringsAsFactors = F, na.strings = "null")
BTC_USD <- BTC_USD %>% rename(Price = High)
# Data Set 2:
GPUs <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/gpu-cpu-history-kaggle/All_GPUs.csv",
stringsAsFactors = F)
GPUs$Release_Price <- as.numeric(gsub("\\$", "", GPUs$Release_Price))
GPUs$Release_Date <- gsub("\\\n", "", GPUs$Release_Date)
GPUs$Release_Date <- as.Date(GPUs$Release_Date, format = "%d-%b-%Y")
# Data Set 3:
bitcoin_price <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/kaggle_crypto_data/bitcoin_price.csv",
stringsAsFactors = F)
bitcoin_price <- bitcoin_price %>% rename(Price = High)
bitcoin_price$Date <- as.Date(bitcoin_price$Date, format = "%b %d, %Y")
# Data Set 4:
ethereum_price <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/kaggle_crypto_data/ethereum_price.csv",
stringsAsFactors = F)
ethereum_price <- ethereum_price %>% rename(Price = High)
ethereum_price$Date <- as.Date(ethereum_price$Date, format = "%b %d, %Y")
# Data Set 5:
dash_price <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/kaggle_crypto_data/dash_price.csv",
stringsAsFactors = F)
dash_price <- dash_price %>% rename(Price = High)
dash_price$Date <- as.Date(dash_price$Date, format = "%b %d, %Y")
# Data Set 6:
iota_price <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/kaggle_crypto_data/iota_price.csv",
stringsAsFactors = F)
iota_price <- iota_price %>% rename(Price = High)
iota_price$Date <- as.Date(iota_price$Date, format = "%b %d, %Y")
# Function to get summary information for each data set (excluding GPUs)
get_summary_info <- function(data) {
summary_info <- list()
summary_info$features <- colnames(data)
summary_info$n_cols <- ncol(data)
summary_info$n_obs <- nrow(data)
summary_info$max_price <- data %>%
filter(Price == max(Price, na.rm = T)) %>%
select(Price)
summary_info$date_max_price <- data %>%
filter(Price == max(Price, na.rm = T)) %>%
select(Date)
summary_info$start_price <- data %>%
filter(Date == min(Date, na.rm = T)) %>%
select(Price)
summary_info$date_start_price <- data %>%
filter(Date == min(Date, na.rm = T)) %>%
select(Date)
return(summary_info)
}
# Summary info for each data set
BTC_summary <- get_summary_info(BTC_USD)
bitcoin_summary <- get_summary_info(bitcoin_price)
ethereum_summary <- get_summary_info(ethereum_price)
dash_summary <- get_summary_info(dash_price)
iota_summary <- get_summary_info(iota_price)
GPU_summary <- list()
GPU_summary$n_cols <- ncol(GPUs)
GPU_summary$n_obs <- nrow(GPUs)
GPU_summary$max_release_price <- GPUs %>%
filter(Release_Price == max(Release_Price, na.rm = T)) %>%
select(Release_Price)
GPU_summary$max_price_release_date <- GPUs %>%
filter(Release_Price == max(Release_Price, na.rm = T)) %>%
select(Release_Date)
GPU_summary$model_max_price <- GPUs %>%
filter(Release_Price == max(Release_Price, na.rm = T)) %>%
select(Architecture)
date <- BTC_summary$date_start_price
date
format.Date(date, "%B %d, %Y")
format.Date(date, format = "%B %d, %Y")
format(date, format = "%B %d, %Y")
?format
?format.Date
format(date)
Sys.Date()
demo <- Sys.Date()
format(demo, format = "%B %d, %Y")
typeof(demo)
typeof(date)
lapply(date, format(date, format = "%B %d, %Y"))
lapply(date, format(date, "%B %d, %Y"))
?unlist
unlist(date)
new_date <- unlist(date)
typeof(new_date)
format(new_date, format = "%B %d, %Y")
as.numeric(new_date)
as.double(new_date)
as.double("new_date")
typeof(new_date)
as.numeric(unlist(date))
lapply(date, format)
typeof(lapply(date, format))
lapply(date, format, format = "%B %d, %Y")
BTC_summary$date_start_price
lapply(BTC_summary$date_start_price)
BTC_summary[BTC_summary$date_start_price]
BTC_summary[[BTC_summary$date_start_price]
BTC_summary[[BTC_summary$date_start_price]]
BTC_summary[[date_start_price]]
BTC_summary
date
unlist(date)
as.numeric(unlist(date))
BTC_summary["date_start_price"]
BTC_summary[["date_start_price"]]
typeof(BTC_summary[["date_start_price"]])
as.character(unlist(date))
as.double(as.character(unlist(date)))
as.double()
?as.double
new_date
gsub('-', '', new_date)
as.double(gsub('-', '', new_date))
format(as.double(gsub('-', '', new_date)), format = "%B %d, %Y")
format(as.Date(gsub('-', '', new_date)), format = "%B %d, %Y")
format(as.Date(as.double(gsub('-', '', new_date))), format = "%B %d, %Y")
format(as.Date(as.double(gsub('-', '', new_date)), "%Y%d%m"), format = "%B %d, %Y")
Sys.Date()
new_date
typeof(new_date)
as.Date(new_date)
typeof(as.Date(new_date))
format(as.Date(new_date), format = "%B %d, %Y")
format(as.Date(unlist(BTC_summary$date_start_price)), format = "%B %d, %Y")
bitcoin_summary$date_start_price
typeof(bitcoin_summary$date_start_price)
format(as.Date(unlist(bitcoin_summary$date_start_price)), format = "%B %d, %Y")
format(as.Date(unlist(BTC_summary$date_start_price)), format = "%B %d, %Y")
as.Date(unlist(bitcoin_summary$date_start_price))
unlist(BTC_summary$date_start_price)
typeof(unlist(BTC_summary$date_start_price))
typeof(unlist(bitcoin_summary$date_start_price))
format(unlist(BTC_summary$date_start_price), format = "%B %d, %Y")
format(unlist(bitcoin_summary$date_start_price), format = "%B %d, %Y")
typeof(Sys.Date())
Sys.Date()
unlist(bitcoin_summary$date_start_price)
bitcoin_summary$date_start_price
as.double(bitcoin_summary$date_start_price)
as.character(bitcoin_summary$date_start_price)
bitcoin_summary[["date_start_price"]]
bitcoin_summary[[date_start_price]]
bitcoin_summary$date_start_price
typeobitcoin_summary$date_start_price
typeof(bitcoin_summary$date_start_price)
?unlist
unlist(bitcoin_summary$date_start_price, use.names = FALSE)
unlist(bitcoin_summary$date_start_price, recursive = FALSE)
as.Date(bitcoin_summary$date_start_price)
as.character(bitcoin_summary$date_start_price)
format(as.Date(unlist(GPU_summary$max_price_release_date)), format = "%B %d, %Y")
library(tidyverse)
# Data Set 1:
BTC_USD <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/BTC-USD-YAHOO.csv",
stringsAsFactors = F, na.strings = "null")
BTC_USD <- BTC_USD %>% rename(Price = High)
# Data Set 2:
GPUs <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/gpu-cpu-history-kaggle/All_GPUs.csv",
stringsAsFactors = F, na.strings = "null")
GPUs$Release_Price <- as.numeric(gsub("\\$", "", GPUs$Release_Price))
GPUs$Release_Date <- gsub("\\\n", "", GPUs$Release_Date)
GPUs$Release_Date <- as.Date(GPUs$Release_Date, format = "%d-%b-%Y")
# Data Set 3:
bitcoin_price <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/kaggle_crypto_data/bitcoin_price.csv",
stringsAsFactors = F)
bitcoin_price <- bitcoin_price %>% rename(Price = High)
bitcoin_price$Date <- as.Date(bitcoin_price$Date, format = "%b %d, %Y")
# Data Set 4:
ethereum_price <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/kaggle_crypto_data/ethereum_price.csv",
stringsAsFactors = F)
ethereum_price <- ethereum_price %>% rename(Price = High)
ethereum_price$Date <- as.Date(ethereum_price$Date, format = "%b %d, %Y")
# Data Set 5:
dash_price <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/kaggle_crypto_data/dash_price.csv",
stringsAsFactors = F)
dash_price <- dash_price %>% rename(Price = High)
dash_price$Date <- as.Date(dash_price$Date, format = "%b %d, %Y")
# Data Set 6:
iota_price <- read.csv("https://raw.githubusercontent.com/cjrieth/AC-5GroupProject/main/data/kaggle_crypto_data/iota_price.csv",
stringsAsFactors = F)
iota_price <- iota_price %>% rename(Price = High)
iota_price$Date <- as.Date(iota_price$Date, format = "%b %d, %Y")
# Function to get summary information for each data set (excluding GPUs)
get_summary_info <- function(data) {
summary_info <- list()
summary_info$features <- colnames(data)
summary_info$n_cols <- ncol(data)
summary_info$n_obs <- nrow(data)
summary_info$max_price <- data %>%
filter(Price == max(Price, na.rm = T)) %>%
select(Price)
summary_info$date_max_price <- data %>%
filter(Price == max(Price, na.rm = T)) %>%
select(Date)
summary_info$start_price <- data %>%
filter(Date == min(Date, na.rm = T)) %>%
select(Price)
summary_info$date_start_price <- data %>%
filter(Date == min(Date, na.rm = T)) %>%
select(Date)
return(summary_info)
}
# Summary info for each data set
BTC_summary <- get_summary_info(BTC_USD)
bitcoin_summary <- get_summary_info(bitcoin_price)
ethereum_summary <- get_summary_info(ethereum_price)
dash_summary <- get_summary_info(dash_price)
iota_summary <- get_summary_info(iota_price)
GPU_summary <- list()
GPU_summary$n_cols <- ncol(GPUs)
GPU_summary$n_obs <- nrow(GPUs)
GPU_summary$max_release_price <- GPUs %>%
filter(Release_Price == max(Release_Price, na.rm = T)) %>%
select(Release_Price)
GPU_summary$max_price_release_date <- GPUs %>%
filter(Release_Price == max(Release_Price, na.rm = T)) %>%
select(Release_Date)
GPU_summary$model_max_price <- GPUs %>%
filter(Release_Price == max(Release_Price, na.rm = T)) %>%
select(Architecture)
format(as.Date(unlist(GPU_summary$max_price_release_date)), format = "%B %d, %Y")
bitcoin_summary$date_max_price
typeof(bitcoin_summary$date_max_price)
unlist(bitcoin_summary$date_max_price)
class(bitcoin_summary$date_max_price)
as.Date(bitcoin_summary$date_max_price)
as.Date(unlist(bitcoin_summary$date_max_price))
library(lubridate)
install.packages("lubridate")
install.packages("lubridate")
library(lubridate)
as_date(bitcoin_summary$date_max_price)
as_date(unlist(bitcoin_summary$date_max_price))
typeof(as_date(unlist(bitcoin_summary$date_max_price)))
format(as_date(unlist(bitcoin_summary$date_max_price)), format = "%B %d, %Y")
format(as_date(unlist(GPU_summary$max_price_release_date)), format = "%B %d, %Y")
lintr::lint("test.R")
lintr::lint("summary_info.R")
lintr::lint("summary_info.R")
styler::style_file("summary_info.R")
lintr::lint("summary_info.R")
